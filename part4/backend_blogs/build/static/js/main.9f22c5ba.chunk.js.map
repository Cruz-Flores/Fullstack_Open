{"version":3,"sources":["services/blogs.js","services/login.js","components/NewBlogForm.js","components/Notification.js","components/Togglable.js","components/Blog.js","components/RegistryForm.js","components/LoginForm.js","App.js","index.js"],"names":["baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","remove","delete","blogsService","setToken","newToken","loginBlogs","credentials","loginService","NewBlogForm","createBlog","useState","title","author","url","newBlog","setNewBlog","handleNewBlogChange","event","target","name","value","className","onSubmit","preventDefault","htmlFor","type","onChange","Notification","notification","message","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","buttonLabel","children","Blog","blog","addLikes","deleteBlog","userLoged","butonText","likes","user","RegistryForm","placeholder","LoginForm","userToLogin","username","password","App","blogs","setBlogs","setUserToLogin","setUserLoged","setNotification","notifyWith","setTimeout","userLogin","window","localStorage","setItem","JSON","stringify","addBLog","blogObject","returnedBlog","concat","changedBlog","map","confirm","filter","object","useEffect","then","loggedUserJSON","getItem","parse","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f22c5ba.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/blogs';\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst remove = async (id) => {\n  const config = {\n    headers: {\n      Authorization: token,\n    },\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nconst blogsService = {\n  getAll,\n  create,\n  update,\n  remove,\n  setToken,\n};\n\nexport { blogsService };\n","import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/api/login';\n\nconst loginBlogs = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nconst loginService = {\n  loginBlogs,\n};\n\nexport { loginService };\n","import React, { useState } from 'react';\n\nconst NewBlogForm = ({ createBlog }) => {\n  const [newBlog, setNewBlog] = useState({\n    title: '',\n    author: '',\n    url: '',\n  });\n\n  const handleNewBlogChange = (event) => {\n    setNewBlog({\n      ...newBlog,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const addBLog = (event) => {\n    event.preventDefault();\n\n    createBlog(newBlog);\n    setNewBlog({\n      title: '',\n      author: '',\n      url: '',\n    });\n  };\n\n  return (\n    <div id=\"newBlogDiv\">\n      <h2>Create new</h2>\n      <form id=\"newBlogForm\" className=\"form\" onSubmit={addBLog}>\n        <div className=\"divInput\">\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            id=\"title\"\n            className=\"title\"\n            value={newBlog.title}\n            type=\"text\"\n            name=\"title\"\n            onChange={handleNewBlogChange}\n          />\n        </div>\n        <div className=\"divInput\">\n          <label htmlFor=\"author\">Author:</label>\n          <input\n            id=\"author\"\n            value={newBlog.author}\n            type=\"text\"\n            name=\"author\"\n            onChange={handleNewBlogChange}\n          />\n        </div>\n        <div className=\"divInput\">\n          <label htmlFor=\"url\">Url:</label>\n          <input\n            id=\"url\"\n            value={newBlog.url}\n            type=\"text\"\n            name=\"url\"\n            onChange={handleNewBlogChange}\n          />\n        </div>\n        <div className=\"divNewBlogInput\">\n          <button id=\"createBlogButton\" className=\"greenButton\" type=\"submit\">\n            Create\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport { NewBlogForm };\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  return <div className={notification.type}>{notification.message}</div>;\n};\n\nexport { Notification };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div className=\"toggleDiv\" style={hideWhenVisible}>\n        <button className=\"greenButton\" onClick={toggleVisibility}>\n          {props.buttonLabel}\n        </button>\n      </div>\n      <div className=\"toggleDiv\" style={showWhenVisible}>\n        {props.children}\n        <button className=\"redButton\" onClick={toggleVisibility}>\n          Cancel\n        </button>\n      </div>\n    </div>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n};\n\nexport { Togglable };\n","import React, { useState } from 'react';\n\nconst Blog = ({ blog, addLikes, deleteBlog, userLoged }) => {\n  const [visible, setVisible] = useState(false);\n  const showWhenVisible = { display: visible ? '' : 'none' };\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  const butonText = visible ? 'hide' : 'view';\n\n  return (\n    <div id=\"blogDiv\" className=\"blogDiv\">\n      <div id=\"titleDiv\">\n        <p>\n          {blog.title} - {blog.author}\n        </p>\n\n        <button className=\"greenButton\" onClick={toggleVisibility}>\n          {butonText}\n        </button>\n      </div>\n      <div id=\"showWhenVisible\" style={showWhenVisible}>\n        <p>{blog.url}</p>\n        <p>{blog.likes}</p>\n        <button className=\"blueButton\" onClick={addLikes}>\n          like\n        </button>\n        <p>{blog.user.name}</p>\n        {blog.user.name === userLoged.name && (\n          <button className=\"redButton\" onClick={deleteBlog}>\n            remove\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { Blog };\n","import React from 'react';\n\nconst RegistryForm = () => {\n  return (\n    <form className=\"form\">\n      <div className=\"divInput\">\n        <label htmlFor=\"name\">Name:</label>\n        <input id=\"name\" type=\"text\" name=\"name\" placeholder=\"Enter name\" />\n      </div>\n      <div className=\"divInput\">\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Enter username\"\n        />\n      </div>\n      <div className=\"divInput\">\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          id=\"password\"\n          type=\"text\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n        />\n      </div>\n      <button className=\"greenButton\">Registry</button>\n    </form>\n  );\n};\n\nexport { RegistryForm };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoginForm = ({ onSubmit, onChange, userToLogin }) => {\n  return (\n    <form id=\"logForm\" className=\"form\" onSubmit={onSubmit}>\n      <div className=\"divInput\">\n        <label htmlFor=\"username\">Username:</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Enter username\"\n          value={userToLogin.username}\n          onChange={onChange}\n        />\n      </div>\n      <div className=\"divInput\">\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          id=\"password\"\n          type=\"text\"\n          name=\"password\"\n          placeholder=\"Enter password\"\n          value={userToLogin.password}\n          onChange={onChange}\n        />\n      </div>\n      <div>\n        <button className=\"blueButton\" type=\"submit\">\n          Login\n        </button>\n      </div>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { LoginForm };\n","import React, { useState, useEffect } from 'react';\nimport { blogsService } from './services/blogs.js';\nimport { loginService } from './services/login.js';\nimport { NewBlogForm } from './components/NewBlogForm.js';\nimport { Notification } from './components/Notification.js';\nimport { Togglable } from './components/Togglable.js';\nimport { Blog } from './components/Blog.js';\nimport { RegistryForm } from './components/RegistryForm.js';\nimport { LoginForm } from './components/LoginForm.js';\n\nimport './index.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [userToLogin, setUserToLogin] = useState({\n    username: '',\n    password: '',\n  });\n  const [userLoged, setUserLoged] = useState(null);\n  const [notification, setNotification] = useState(null);\n\n  const handleInputChange = (event) => {\n    setUserToLogin({\n      ...userToLogin,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const notifyWith = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 2000);\n  };\n\n  const userLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.loginBlogs({\n        ...userToLogin,\n      });\n      window.localStorage.setItem('loggedBlogsappUser', JSON.stringify(user));\n      blogsService.setToken(user.token);\n      setUserLoged(user);\n      setUserToLogin({\n        username: '',\n        password: '',\n      });\n      notifyWith(`${user.name} logged`, 'succes');\n    } catch (exception) {\n      notifyWith('Wrong credentials', 'error');\n    }\n  };\n\n  const userLogout = () => {\n    window.localStorage.removeItem('loggedBlogsappUser');\n    setUserLoged(null);\n    notifyWith(`${userLoged.name} logout`, 'succes');\n  };\n\n  const addBLog = async (blogObject) => {\n    try {\n      const returnedBlog = await blogsService.create(blogObject);\n      setBlogs(blogs.concat(returnedBlog));\n      notifyWith(\n        `A new Blog ${returnedBlog.title} by ${returnedBlog.author} added`,\n        'succes'\n      );\n    } catch (exception) {\n      notifyWith('Error', 'error');\n    }\n  };\n\n  const addLikes = async (blogObject) => {\n    const changedBlog = { ...blogObject, likes: blogObject.likes + 1 };\n    try {\n      const returnedBlog = await blogsService.update(\n        blogObject.id,\n        changedBlog\n      );\n      setBlogs(\n        blogs.map((blog) => (blog.id !== blogObject.id ? blog : returnedBlog))\n      );\n    } catch (exception) {\n      notifyWith('Error', 'error');\n    }\n  };\n\n  const deleteBlog = async (blog) => {\n    const ok = window.confirm(`Delete the blog ${blog.title}`);\n    if (ok) {\n      await blogsService.remove(blog.id);\n      setBlogs(blogs.filter((object) => object.id !== blog.id));\n      notifyWith(`Deleted ${blog.title}`, 'succes');\n    }\n  };\n\n  useEffect(() => {\n    blogsService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogsappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUserLoged(user);\n      blogsService.setToken(user.token);\n    }\n  }, []);\n\n  return (\n    <>\n      <Notification notification={notification} />\n      {!userLoged ? (\n        <div className=\"formDiv\">\n          <LoginForm\n            onSubmit={userLogin}\n            userToLogin={userToLogin}\n            onChange={handleInputChange}\n          />\n          <Togglable buttonLabel=\"Registry\">\n            <RegistryForm />\n          </Togglable>\n        </div>\n      ) : (\n        <div id=\"mainDiv\">\n          <h2>Blogs</h2>\n          <p>\n            {userLoged.name} logged in\n            <button className=\"redButton\" onClick={userLogout}>\n              logout\n            </button>\n          </p>\n          <Togglable buttonLabel=\"create\">\n            <NewBlogForm createBlog={addBLog} />\n          </Togglable>\n          {blogs.map((blog) => (\n            <Blog\n              key={blog.id}\n              blog={blog}\n              userLoged={userLoged}\n              addLikes={() => addLikes(blog)}\n              deleteBlog={() => deleteBlog(blog)}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}